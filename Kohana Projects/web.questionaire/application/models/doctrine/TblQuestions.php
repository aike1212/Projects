<?php

/**
 * TblQuestions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6401 2009-09-24 16:12:04Z guilhermeblanco $
 */
class TblQuestions extends BaseTblQuestions
{
  
	/**
	 * Get all questions in a given questionnaire
	 */
  public function get_total($questionnaire)
  {
    $query = Doctrine_Query::create()
      ->from("Tblquestions q")
      ->where("q.questionnaire = ?", $questionnaire);

    return $query;
  }
	
	/**
	 * Get all questions in a given location
	 */
	public function get_question_by_location($location)
	{
	  $query = Doctrine_Query::create()
		  ->from("Tblquestions q")
			->where("q.location = ?", $location);
	
	  return $query->execute();
	}
	
	/**
	 * Get all answers of a user based on the question
	 */
	public function get_user_answers($user_id)
	{
	  $query = Doctrine_Query::create()
			->from("TblQuestions q")
			->leftJoin("q.TblAnswers a")
			->leftJoin("a.TblUsers u")
			->where("u.id = ?", $user_id);
			
		$result = $query->execute();
		
		return $result;
	}
	
	/**
	 * Get all questions based on the location filter and the questionnaire filter
	 */
	public function search_question_group($location, $questionnaire)
	{
		$query = Doctrine_Query::create()
			->from ("TblQuestions q");

		if($location != null && $questionnaire != null)
		{
			$query->where (
				"(".
				"q.location = :location AND " .
				"q.questionnaire = :questionnaire" .
				")", array (
					":location" => "$location",
					":questionnaire" => "$questionnaire"
				)
			);
			return $query->execute();			
		}
		else if($location != null && $questionnaire == null)
		{
			$query->where (
				"(".
				"q.location = :location " .
				")", array (
					":location" => "$location"					
				)
			);
			return $query->execute();
		}
		else if($location == null && $questionnaire != null)
		{
			$query->where (
				"(".
				"q.questionnaire = :questionnaire " .
				")", array (
					":questionnaire" => "$questionnaire"					
				)
			);
			return $query->execute();
		}
		else
		{
		  return $query->execute();
		}
	}
}